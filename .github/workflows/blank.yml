name: Continuous Persistent VPS (Ubuntu)

on:
  schedule:
    - cron: '0 */6 * * *'   # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 330   # 5h30m

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set hostname to DIAMOND
        run: sudo hostnamectl set-hostname DIAMOND

      - name: Download VPS backup (if any)
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y curl unzip sudo net-tools zip rsync

      - name: Create user DIAMOND with sudo
        run: |
          if ! id -u DIAMOND >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash DIAMOND
            echo "DIAMOND:DIAMOND" | sudo chpasswd
            sudo usermod -aG sudo DIAMOND
            echo "DIAMOND ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/DIAMOND
          fi
          # Always ensure home folder exists
          sudo mkdir -p /home/DIAMOND
          sudo chown -R DIAMOND:DIAMOND /home/DIAMOND

      - name: Restore VPS backup (safe)
        run: |
          if [ -f ./backup/backup.zip ]; then
            echo "üìÇ Restoring backup..."
            mkdir -p restore
            unzip -o ./backup/backup.zip -d restore

            # Restore DIAMOND home
            sudo rsync -a \
              --exclude='*.sock' --exclude='*.socket' \
              --exclude='*.fifo' --exclude='*.pipe' \
              --exclude='/dev/*' \
              restore/clean-backup/home/DIAMOND/ /home/DIAMOND/ || true

            # Restore VPS backup dir
            sudo rsync -a \
              --exclude='*.sock' --exclude='*.socket' \
              --exclude='*.fifo' --exclude='*.pipe' \
              --exclude='/dev/*' \
              restore/clean-backup/opt/vps-backup/ /opt/vps-backup/ || true

            # Restore Playit config
            sudo rsync -a \
              --exclude='*.sock' --exclude='*.socket' \
              --exclude='*.fifo' --exclude='*.pipe' \
              --exclude='/dev/*' \
              restore/clean-backup/root/.playit/ /root/.playit/ || true

            echo "‚úÖ Restore completed safely."
          else
            echo "‚ö†Ô∏è No backup found, starting fresh system."
          fi

      - name: Install Playit tunnel client
        run: |
          curl -L https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -o playit
          chmod +x playit
          sudo mv playit /usr/local/bin/playit

      - name: Start Playit tunnel (persistent)
        run: |
          echo "üöÄ Starting Playit tunnel..."
          playit > playit.log 2>&1 &
          sleep 10
          echo "‚úÖ Playit tunnel started."
          grep "https://playit.gg/claim" playit.log || true
          grep -E "tcp://|udp://" playit.log || echo "‚ö†Ô∏è Could not find tunnel address in logs"

      - name: Backup VPS data (safe)
        run: |
          echo "üì¶ Creating safe backup..."
          sudo mkdir -p /opt/vps-backup
          rm -rf clean-backup
          mkdir -p clean-backup

          # Copy DIAMOND home
          rsync -a \
            --exclude='*.sock' --exclude='*.socket' \
            --exclude='*.fifo' --exclude='*.pipe' \
            --exclude='/dev/*' \
            /home/DIAMOND/ clean-backup/home/DIAMOND/

          # Copy VPS data
          rsync -a \
            --exclude='*.sock' --exclude='*.socket' \
            --exclude='*.fifo' --exclude='*.pipe' \
            --exclude='/dev/*' \
            /opt/vps-backup/ clean-backup/opt/vps-backup/

          # Copy Playit config
          rsync -a \
            --exclude='*.sock' --exclude='*.socket' \
            --exclude='*.fifo' --exclude='*.pipe' \
            --exclude='/dev/*' \
            /root/.playit/ clean-backup/root/.playit/

          sudo zip -r backup.zip clean-backup
          sudo chown -R $USER:$USER backup.zip
          echo "‚úÖ Backup created safely."

      - name: Upload VPS backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: backup.zip

      - name: Keep VPS alive for 5h30m
        run: sleep 19800   # 5h30m
